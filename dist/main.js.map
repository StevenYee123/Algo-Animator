{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/search_algorithms/dfs.js","webpack:///./src/search_algorithms/bfs.js","webpack:///./src/search_algorithms/dijkstra.js","webpack:///./src/buttons/keepwalls.js","webpack:///./src/gridNodes.js","webpack:///./src/buttons/reset.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","depthFirstSearch","graph","draw","this","visited","Set","stack","starting","interval","addToStack","setInterval","DFS_ID","node","first","length","ending","clearInterval","has","pop","add","neighbors","forEach","neighbor","val","includes","push","breadthFirstSearch","queue","addToQueue","BFS_ID","shift","minDistanceNode","nodes","distance","Array","from","reduce","minNode","flatten","arr","isArray","allElements","ele","flattened","dijkstrasTraversal","source","previous","adjacents","nodeNeighbors","weight","Infinity","unvisited","keys","size","currNode","delete","distanceFromCurrToNeighbor","totalNeighborDistance","dijkstras","traversal","start","end","path","reverse","slice","allNodes","pathNodes","DIJKSTRA_ID","keepwalls","row","GridNodes","determineNeighbors","nodeGenerator","Node","positions","position","x","y","xpos","ypos","reset","window","addEventListener","wallsActivated","weightsActivated","canvas","document","getElementById","ctx","getContext","drawGrid","onmousedown","e","onmousemove","myMove","getMousePosition","posx","posy","bindedX","bindedY","currentStart","startDrag","currentEnd","endDrag","onmouseup","ondragstart","modal","btn","span","getElementsByClassName","onclick","style","display","event","target","gridNodes","clearRect","col","w","h","state","fillStyle","beginPath","rect","closePath","fill","gridColumns","addWallButton","classList","remove","addWeightButton","toggle","canv","box","getBoundingClientRect","clientX","left","clientY","top"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","class depthFirstSearch{\n  constructor(graph, draw){\n    this.visited = new Set();\n    this.graph = graph;\n    this.stack = [graph.starting];\n    this.interval = null;\n    this.addToStack = this.addToStack.bind(this);\n    this.draw = draw;\n\n    this.interval = setInterval(this.addToStack, 20);\n    DFS_ID = this.interval;\n  }\n\n  addToStack() {\n    let node;\n    const first = this.stack[0];\n    if (this.stack.length > 0) {\n      node = this.stack[this.stack.length - 1];\n    }\n    if (first === this.graph.starting) {\n      node = this.graph.starting;\n    }\n    if (node === this.graph.ending || this.stack.length === 0) {\n      clearInterval(this.interval);\n      this.stack = [];\n      this.draw();\n      return;\n    } else if (this.visited.has(node)) {\n      return;\n    }\n    node = this.stack.pop();\n    this.visited.add(node);\n    node.neighbors.forEach((neighbor) => {\n      if (\n        !this.visited.has(neighbor) &&\n        neighbor.val !== 50 &&\n        !this.stack.includes(neighbor)\n      ) {\n        this.stack.push(neighbor);\n      }\n    });\n    if (node.val === 10) {\n      node.val = 75;\n    } else if (node.val === 300) {\n      node.val = 350;\n    }\n\n    this.draw();\n  }\n}\n\nexport default depthFirstSearch;","class breadthFirstSearch{\n    constructor(graph, draw){\n        this.queue = [graph.starting];\n        this.visited = new Set();\n        this.interval = null;\n        this.draw = draw;\n        this.graph = graph;\n        this.addToQueue = this.addToQueue.bind(this);\n\n        this.interval = setInterval(this.addToQueue, 20);\n        BFS_ID = this.interval;\n    }\n\n    addToQueue(){\n        let node;\n        if (this.queue.length > 0){\n            node = this.queue[0];\n        }\n        if (this.queue[0] === this.graph.starting){\n            node = this.graph.starting;\n        }\n        if (node === this.graph.ending || this.queue.length === 0){\n            clearInterval(this.interval);\n            this.queue = [];\n            this.draw();\n            return;\n        } else if (this.visited.has(node)){\n            return;\n        }\n        node = this.queue.shift();\n        this.visited.add(node);\n        node.neighbors.forEach((neighbor) => {\n            if (!this.visited.has(neighbor) && neighbor.val !== 50 && !this.queue.includes(neighbor)){\n                this.queue.push(neighbor);\n            }\n        })\n        if (node.val === 10){\n            node.val = 75;\n        } else if (node.val === 300){\n            node.val = 350;\n        } \n\n        this.draw();\n    }\n}\n\nexport default breadthFirstSearch;","class dijkstrasTraversal{\n    constructor(graph, source, draw){\n        let {previous} = dijkstras(graph, source);\n        this.traversal = this.traversal.bind(this);\n        this.draw = draw;\n        this.start = graph.starting;\n        this.end = graph.ending;\n        this.path = [this.end.key];\n        this.interval = null;\n        this.node = this.start;\n\n        while(this.path[this.path.length - 1] !== this.start.key){\n            this.path.push(previous[this.path[this.path.length - 1]]);\n        }\n\n        this.path = this.path.reverse().slice(1);\n\n        let allNodes = flatten(graph.nodes);\n        this.pathNodes = [];\n\n        this.path.forEach((key) => {\n            allNodes.forEach((node) => {\n                if(key === node.key){\n                    this.pathNodes.push(node);\n                }\n            });\n        });\n\n        this.interval = setInterval(this.traversal, 20);\n        DIJKSTRA_ID = this.interval;\n    }\n\n    traversal(){\n        if (this.node === this.end || this.pathNodes.length === 0){\n            clearInterval(this.interval);\n            this.draw();\n            return;\n        }\n\n        this.node = this.pathNodes.shift();\n        if (this.node.val === 10){\n            this.node.val = 75;\n        } else if (this.node.val === 300){\n            this.node.val = 350;\n        }\n        this.draw();\n    }\n}\n\nfunction dijkstras(graph, source){\n    let adjacents = {};\n\n    let nodes = flatten(graph.nodes);\n    nodes.forEach((node) => {\n        let nodeNeighbors = {};\n        node.neighbors.forEach((neighbor) => {\n            if (neighbor.val !== 50){\n                nodeNeighbors[neighbor.key] = neighbor.weight;\n            }\n        });\n        adjacents[node.key] = nodeNeighbors;\n    });\n\n    let distance = {};\n    for (let node in adjacents){\n        distance[node] = Infinity;\n    }\n    distance[source] = 0;\n\n    let unvisited = new Set(Object.keys(adjacents));\n    let previous = {};\n\n    while (unvisited.size > 0){\n        let currNode = minDistanceNode(unvisited, distance);\n        unvisited.delete(currNode);\n\n        for (let neighbor in adjacents[currNode]){\n            let distanceFromCurrToNeighbor = adjacents[currNode][neighbor];\n            let totalNeighborDistance = distance[currNode] + distanceFromCurrToNeighbor;\n\n            if (distance[neighbor] > totalNeighborDistance){\n                distance[neighbor] = totalNeighborDistance;\n                previous[neighbor] = currNode;\n            }\n        }\n    }\n\n    return { distance, previous };\n}\n\nfunction minDistanceNode(nodes, distance){\n    return Array.from(nodes).reduce((minNode, node) => (\n        distance[node] < distance[minNode] ? node : minNode\n    ));\n}\n\nfunction flatten(arr) {\n  if (!Array.isArray(arr)) return [arr];\n\n  let allElements = [];\n  arr.forEach((ele) => {\n    let flattened = flatten(ele);\n    allElements.push(...flattened);\n  });\n\n  return allElements;\n}\n\nexport default dijkstrasTraversal;","const keepwalls = (graph, start, end) => {\n    graph.nodes.forEach((row) => {\n        row.forEach((node) => {\n            if (node.val !== 50 && node.val !== 300 && node.val !== 350){\n                node.val = 10;\n                node.weight = 1;\n            } else if (node.val === 350){\n                node.val = 300;\n                node.weight = 8;\n            }\n        });\n    });\n\n    graph.starting = start;\n    graph.starting.val = 1;\n    \n    graph.ending = end;\n    graph.ending.val = 2;\n\n    clearInterval(BFS_ID);\n    clearInterval(DFS_ID);\n    clearInterval(DIJKSTRA_ID);\n}\n\nexport default keepwalls;","class GridNodes {\n  constructor() {\n    this.determineNeighbors = this.determineNeighbors.bind(this);\n    this.nodeGenerator = this.nodeGenerator.bind(this);\n    this.nodes = this.nodeGenerator();\n    this.starting = this.nodes[13][15];\n    this.ending = this.nodes[42][15];\n  }\n\n  nodeGenerator() {\n    let nodes = [];\n    let boxW = 20;\n    let boxH = 20;\n    for (let i = 0; i < 57; i++) {\n      nodes.push([]);\n      for (let n = 0; n < 31; n++) {\n        nodes[i].push(new Node(10, [i, n], i * (boxW + 3), n * (boxH + 3)));\n      }\n    }\n    this.determineNeighbors(nodes);\n    return nodes;\n  }\n\n  determineNeighbors(nodes) {\n    const positions = [\n      [0, -1],\n      [-1, 0],\n      [0, 1],\n      [1, 0],\n    ];\n    let flattened = flatten(nodes);\n    flattened.forEach(function (node) {\n      positions.forEach(function (position) {\n        let neighbor = [node.x + position[0], node.y + position[1]];\n        if (\n          neighbor[0] >= 0 &&\n          neighbor[0] < 57 &&\n          neighbor[1] >= 0 &&\n          neighbor[1] < 31 &&\n          !node.neighbors.includes(nodes[neighbor[0]][neighbor[1]])\n        ) {\n          node.neighbors.push(nodes[neighbor[0]][neighbor[1]]);\n        }\n      });\n    });\n  }\n}\n\nfunction flatten(arr) {\n  if (!Array.isArray(arr)) return [arr];\n\n  let allElements = [];\n  arr.forEach((ele) => {\n    let flattened = flatten(ele);\n    allElements.push(...flattened);\n  });\n\n  return allElements;\n}\n\nclass Node {\n  constructor(val, [x, y], xpos, ypos) {\n    this.val = val;\n    this.key = `[${x}][${y}]`;\n    this.x = x;\n    this.y = y;\n    this.neighbors = [];\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.weight = 1;\n  }\n}\n\nexport default GridNodes;","const reset = (graph, start, end) => {\n  graph.nodes.forEach((row) => {\n    row.forEach((node) => {\n      node.val = 10;\n      node.weight = 1;\n    });\n  });\n\n  graph.starting = start;\n  graph.starting.val = 1;\n\n  graph.ending = end;\n  graph.ending.val = 2;\n  clearInterval(DIJKSTRA_ID);\n  clearInterval(DFS_ID);\n  clearInterval(BFS_ID);\n}\n\nexport default reset;\n","import \"./styles/index.scss\";\nimport \"./styles/modal.scss\";\nimport depthFirstSearch from \"./search_algorithms/dfs\";\nimport breadthFirstSearch from \"./search_algorithms/bfs\";\nimport dijkstrasTraversal from \"./search_algorithms/dijkstra\";\nimport keepwalls from \"./buttons/keepwalls\";\nimport gridNodes from \"./gridNodes\";\nimport reset from \"./buttons/reset\";\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  let wallsActivated = false;\n  let weightsActivated = false;\n  let canvas = document.getElementById(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  init();\n  canvas.onmousedown = mouseDown;\n  canvas.onmouseup = mouseUp;\n  canvas.ondragstart = function () {\n    return false;\n  };\n  //Modal functions\n  const modal = document.getElementById(\"myModal\");\n  const btn = document.getElementById(\"myBtn\");\n  const span = document.getElementsByClassName(\"close\")[0];\n  btn.onclick = function () {\n    modal.style.display = \"block\";\n  };\n  span.onclick = function () {\n    modal.style.display = \"none\";\n  };\n  window.onclick = function (event) {\n    if (event.target == modal) {\n      modal.style.display = \"none\";\n    }\n  };\n\n  //Establish a width and Height for our grid\n  let WIDTH = 1650;\n  let HEIGHT = 750;\n  //Establish a set width and height for each Node\n  let nodeW = 20;\n  let nodeH = 20;\n  //Establish the num of rows and columns for the grid\n  let gridRows = 31;\n  let gridColumns = 57;\n  //Establish a bound for our grid\n  let bindedX = 0;\n  let bindedY = 0;\n  //Create our grid\n  let graph = new gridNodes();\n  //Start and ending nodes\n  graph.nodes[13][15].val = 1;\n  graph.nodes[gridColumns - 15][15].val = 2;\n\n  function drawRect(x, y, w, h, state) {\n    if (state === 1) {\n      //Start Node\n      ctx.fillStyle = \"#3D9970\";\n    } else if (state === 2) {\n      //End Node\n      ctx.fillStyle = \"#FC7272\";\n    } else if (state === 10) {\n      //Not Checked\n      ctx.fillStyle = \"#55BCC9\";\n    } else if (state === 50) {\n      //Wall\n      ctx.fillStyle = \"#111111\";\n    } else if (state === 75) {\n      //Checked\n      ctx.fillStyle = \"#0074D9\";\n    } else if (state === 300) {\n      ctx.fillStyle = \"#FFFF00\";\n    } else if (state === 350) {\n      ctx.fillStyle = \"#FEB302\";\n    }\n    ctx.beginPath();\n    ctx.rect(x, y, w, h);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  function init() {\n    canvas = document.getElementById(\"canvas\");\n    ctx = canvas.getContext(\"2d\");\n\n    return setInterval(drawGrid, 10);\n  }\n\n  function clearGrid() {\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\n  }\n\n  function drawGrid() {\n    clearGrid();\n    for (let col = 0; col < gridColumns; col++) {\n      for (let row = 0; row < gridRows; row++) {\n        drawRect(graph.nodes[col][row].xpos, graph.nodes[col][row].ypos, nodeW, nodeH, graph.nodes[col][row].val);\n      }\n    }\n  }\n\n  let currentStart = graph.starting;\n  let currentEnd = graph.ending;\n\n  let startDrag = false;\n  let endDrag = false;\n\n  function mouseDown(e) {\n    canvas.onmousemove = myMove;\n    let position = getMousePosition(canvas, e);\n    let posx = position.x;\n    let posy = position.y;\n    for (let c = 0; c < gridColumns; c++) {\n      for (let r = 0; r < gridRows; r++) {\n        if (c * (nodeW + 3) < posx && posx < c * (nodeW + 3) + nodeW && r * (nodeH + 3) < posy && posy < r * (nodeH + 3) + nodeH) {\n          if (graph.nodes[c][r].val === 10 && wallsActivated === true) {\n                graph.nodes[c][r].val = 50;\n                bindedX = c;\n                bindedY = r;\n          } else if (graph.nodes[c][r].val === 50 && wallsActivated === true) {\n                graph.nodes[c][r].val = 10;\n                bindedX = c;\n                bindedY = r;\n          } else if (graph.nodes[c][r].val === 10 && weightsActivated === true) {\n                graph.nodes[c][r].val = 300;\n                graph.nodes[c][r].weight = 8;\n                bindedX = c;\n                bindedY = r;\n          } else if (graph.nodes[c][r].val === 300 && weightsActivated === true) {\n                graph.nodes[c][r].val = 10;\n                graph.nodes[c][r].weight = 1;\n                bindedX = c;\n                bindedY = r;\n          } else if ( wallsActivated === false && weightsActivated === false && graph.nodes[c][r].val !== 2 && graph.nodes[c][r].val === 1 \n            && currentStart.x * (nodeW + 3) < posx && posx < currentStart.x * (nodeW + 3) + nodeW && posy > currentStart.y * (nodeH + 3) \n            && posy < currentStart.y * (nodeH + 3) + nodeH) {\n                currentStart.val = 10;\n                graph.nodes[c][r].val = 1;\n                currentStart = graph.nodes[c][r];\n                graph.starting = currentStart;\n                bindedX = c;\n                bindedY = r;\n                startDrag = true;\n          } else if (wallsActivated === false && weightsActivated === false && graph.nodes[c][r].val !== 1 && graph.nodes[c][r].val === 2 \n            && currentEnd.x * (nodeW + 3) < posx && posx < currentEnd.x * (nodeW + 3) + nodeW && posy > currentEnd.y * (nodeH + 3)\n            && posy < currentEnd.y * (nodeH + 3) + nodeH) {\n                currentEnd.val = 10;\n                graph.nodes[c][r].val = 2;\n                currentEnd = graph.nodes[c][r];\n                graph.ending = currentEnd;\n                bindedX = c;\n                bindedY = r;\n                endDrag = true;\n          }\n        }\n      }\n    }\n  }\n\n  function myMove(e) {\n    let position = getMousePosition(canvas, e);\n    let posx = position.x;\n    let posy = position.y;\n    for (let c = 0; c < gridColumns; c++) {\n      for (let r = 0; r < gridRows; r++) {\n        if (c * (nodeW + 3) < posx && posx < c * (nodeW + 3) + nodeW && r * (nodeH + 3) < posy && posy < r * (nodeH + 3) + nodeH) {\n          if (graph.nodes[c][r].val === 10 && (c !== bindedX || r !== bindedY) && wallsActivated === true) {\n                graph.nodes[c][r].val = 50;\n                bindedX = c;\n                bindedY = r;\n          } else if (graph.nodes[c][r].val === 50 && (c !== bindedX || r !== bindedY) && wallsActivated === true) {\n                graph.nodes[c][r].val = 10;\n                bindedX = c;\n                bindedY = r;\n          } else if (graph.nodes[c][r].val === 10 && (c !== bindedX || r !== bindedY) && weightsActivated === true) {\n                graph.nodes[c][r].val = 300;\n                graph.nodes[c][r].weight = 8;\n                bindedX = c;\n                bindedY = r;\n          } else if (graph.nodes[c][r].val === 300 && (c !== bindedX || r !== bindedY) && weightsActivated === true) {\n                graph.nodes[c][r].val = 10;\n                graph.nodes[c][r].weight = 1;\n                bindedX = c;\n                bindedY = r;\n          } else if (wallsActivated === false && weightsActivated === false && graph.nodes[c][r].val !== 2 \n            && (c !== bindedX || r !== bindedY) && startDrag === true) {\n                currentStart.val = 10;\n                graph.nodes[c][r].val = 1;\n                currentStart = graph.nodes[c][r];\n                graph.starting = currentStart;\n\n                bindedX = c;\n                bindedY = r;\n          } else if (wallsActivated === false && weightsActivated === false && graph.nodes[c][r].val !== 1 \n            && (c !== bindedX || r !== bindedY) && endDrag === true\n          ) {\n                currentEnd.val = 10;\n                graph.nodes[c][r].val = 2;\n                currentEnd = graph.nodes[c][r];\n                graph.ending = currentEnd;\n\n                bindedX = c;\n                bindedY = r;\n          }\n        }\n      }\n    }\n  }\n    //Create button functionality\n  const dfsButton = document.getElementById(\"dfs-button\");\n  dfsButton.onclick = () => {\n    keepwalls(graph, currentStart, currentEnd);\n    new depthFirstSearch(graph, drawGrid);\n  };\n  const bfsButton = document.getElementById(\"bfs-button\");\n  bfsButton.onclick = () => {\n    keepwalls(graph, currentStart, currentEnd);\n    new breadthFirstSearch(graph, drawGrid);\n  };\n  const dijkstrasButton = document.getElementById(\"dijkstras-button\");\n  dijkstrasButton.onclick = () => {\n    keepwalls(graph, currentStart, currentEnd);\n    new dijkstrasTraversal(graph, graph.starting.key, drawGrid);\n  };\n  const resetButton = document.getElementById(\"reset-button\");\n  resetButton.onclick = () => {\n    reset(graph, currentStart, currentEnd);\n    wallsActivated = false;\n    addWallButton.classList.remove(\"clicked\");\n    weightsActivated = false;\n    addWeightButton.classList.remove(\"clicked\");\n  };\n  const keepWallsButton = document.getElementById(\"keepwalls-button\");\n  keepWallsButton.onclick = () => {\n    keepwalls(graph, currentStart, currentEnd);\n    wallsActivated = false;\n    addWallButton.classList.remove(\"clicked\");\n    weightsActivated = false;\n    addWeightButton.classList.remove(\"clicked\");\n  };\n  const addWallButton = document.getElementById(\"addwalls-button\");\n  addWallButton.onclick = () => {\n    wallsActivated = !wallsActivated;\n    weightsActivated = false;\n    addWeightButton.classList.remove(\"clicked\");\n    addWallButton.classList.toggle(\"clicked\");\n  };\n  const addWeightButton = document.getElementById(\"addweights-button\");\n  addWeightButton.onclick = () => {\n    weightsActivated = !weightsActivated;\n    wallsActivated = false;\n    addWallButton.classList.remove(\"clicked\");\n    addWeightButton.classList.toggle(\"clicked\");\n  };\n\n  function mouseUp() {\n    canvas.onmousemove = null;\n    startDrag = false;\n    endDrag = false;\n  }\n\n  function getMousePosition(canv, event) {\n    let box = canv.getBoundingClientRect();\n    return {\n      x: event.clientX - box.left,\n      y: event.clientY - box.top,\n    };\n  }\n});"],"sourceRoot":""}